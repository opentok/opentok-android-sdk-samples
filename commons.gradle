import groovy.io.FileType

/*
Dependency versions
*/
ext {
    extAgpVersion="4.1.2"
    extCompileSdkVersion=30
    extBuildToolsVersion="30.0.2"
    extMinSdkVersion=16
    extTargetSdkVersion=28
    extVersionCode=1
    extVersionName="1.0"
    extMinifyEnabled=false
    extAppCompatVersion="1.1.0"
    extOpentokSdkVersion="2.18.+"
    extRetrofitVersion="2.9.0"
    extOkHttpVersion="4.8.1"
    extRetrofit2ConverterMoshi="2.8.2"
}

/*
Look for the `OpenTokConfig` file and verify if there are no hardcoded values.
This task prevents from merging credentials and custom server URLs.
*/
task checkOpenTokConfig() {
    doLast {
        def openTokConfigFound = false

        def dir = new File(".")
        dir.eachFileRecurse (FileType.FILES) { file ->

            if(file.name == "OpenTokConfig.java") {
                openTokConfigFound = true

                checkOpenTokConfigProperty(file, "API_KEY")
                checkOpenTokConfigProperty(file, "SESSION_ID")
                checkOpenTokConfigProperty(file, "TOKEN")
                checkOpenTokConfigProperty(file, "CHAT_SERVER_URL")
            }
        }

        if (!openTokConfigFound) {
            throw new Exception("OpenTokConfig.java not found")
        }
    }
}

def checkOpenTokConfigProperty(file, propertyName) {
    file.eachLine { line ->
        // If property exists within config file it must be an empty String
        if (line.contains("public static final String $propertyName") && !line.contains('""')) {
            throw new Exception("Opentok config property is not empty: ${line}")
        }
    }
}